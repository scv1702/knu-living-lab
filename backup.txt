import ProductCardContainer from "../components/ProductCardContainer";
import Navbar from "../components/Navbar";
import clientPromise from "../lib/mongodb";
import { InferGetServerSidePropsType } from "next";
import ProductList from "./products/[category]";

export async function getServerSideProps(contex: any) {
  try {
    await clientPromise;
    // `await clientPromise` will use the default database passed in the MONGODB_URI
    // However you can use another database (e.g. myDatabase) by replacing the `await clientPromise` with the following code:
    //
    // `const client = await clientPromise`
    // `const db = client.db("myDatabase")`
    //
    // Then you can execute queries against your database like so:
    // db.find({}) or any of the MongoDB Node Driver commands

    return {
      props: { isConnected: true },
    };
  } catch (e) {
    console.error(e);
    return {
      props: { isConnected: false },
    };
  }
}

const Home: React.FC<
  InferGetServerSidePropsType<typeof getServerSideProps>
> = ({ isConnected }) => {
  return (
    <>
      <Navbar />
    </>
  );
};

export default Home;
